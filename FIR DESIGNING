module fir_filter (
    input clk,
    input rst,
    input [7:0] x, // Input sample
    output reg [15:0] y // Output sample
);
    // Coefficients
    reg [7:0] h[4:0] = {1, 2, 3, 2, 1};
    reg [7:0] shift_reg[4:0]; // Shift register to hold past inputs

    integer i;
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            // Reset shift register
            for (i = 0; i < 5; i = i + 1)
                shift_reg[i] <= 0;
            y <= 0;
        end else begin
            // Shift input samples
            for (i = 4; i > 0; i = i - 1)
                shift_reg[i] <= shift_reg[i-1];
            shift_reg[0] <= x;

            // Compute output
            y <= 0;
            for (i = 0; i < 5; i = i + 1)
                y <= y + shift_reg[i] * h[i];
        end
    end
endmodule
